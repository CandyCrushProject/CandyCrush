<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.mes.process.mapper.ProcMapper">
	
	
	<!-- 주문 상세 코드 '접수완료' -->
	<select id="getOrdrDtlCd" resultType="OrderPlanVO">
		SELECT ordr_dtl_cd
		  FROM order_sheet_detail
		 WHERE orsh_pr = '접수완료'
		 AND orsh_no IN 
			<foreach collection='orshNo' index='index' item='orshNo' open='(' close=')' separator=','>
			#{orshNo}
			</foreach>
	</select>
	
	<!-- 제품 코드리스트 -->
	<select id="selectCprCdList" resultType="OrderPlanVO">
		SELECT cpr_cd
		  FROM cm_product_mng
		 ORDER BY cpr_cd
	</select>
	<!-- 주문서리스트 -->
	<select id="selectOrder" resultType="OrderPlanVO">
		SELECT s.orsh_no as orsh_no
		     , COUNT(ordr_dtl_cd) as ordr_cd_cnt
		     , s.ca_no as ca_no
		     , ca_nm
		     , TO_CHAR(dlvry_dt,'rrrr-MM-dd') as dlvry_dt
		     , TO_CHAR(orsh_dt,'rrrr-MM-dd') as orsh_dt
		  FROM order_sheet s, order_sheet_detail d, cm_account a
		 WHERE s.orsh_no = d.orsh_no(+)
		   AND s.ca_no = a.ca_no(+)
		   AND orsh_pr = '접수완료'
		 GROUP BY s.orsh_no, s.ca_no,ca_nm, orsh_dt, dlvry_dt
		 ORDER BY dlvry_dt
	</select>
	
	<!-- 주문건의 다건 -->
	<select id="selectOrderDetail" parameterType="OrderPlanVO" resultType="OrderPlanVO">
		SELECT o.orsh_no as orsh_no
			 , o.ca_no as ca_no
			 , ca_nm
			 , ordr_dtl_cnt
			 , ordr_dtl_cd
			 , TO_CHAR(dlvry_dt,'rrrr-MM-dd') as dlvry_dt
			 , TO_CHAR(orsh_dt,'rrrr-MM-dd') as orsh_dt
			 , orsh_pr
			 , d.cpr_cd as cpr_cd
			 , p.cpr_nm as cpr_nm
			 , TO_CHAR(d.stt_cng_dt,'rrrr-MM-dd') as stt_cng_dt
		  FROM order_sheet o
			 , order_sheet_detail d
			 , cm_product_mng p
			 , cm_account a
		 WHERE o.orsh_no = d.orsh_no(+)
		   AND d.cpr_cd = p.cpr_cd(+)
		   AND o.ca_no = a.ca_no(+)
	       AND d.orsh_pr = '접수완료'
           AND d.orsh_no = #{orshNo}
           AND ca_nm = #{caNm}
		 ORDER BY 5
	</select>
	<!-- 계획 등록 전 정보 -->
	<select id="addPlanbefore" resultType="OrderPlanVO">
		SELECT SUM(ordr_dtl_cnt) as sum_dtl_cnt
			 , d.cpr_cd as cpr_cd
			 , p.cpr_nm as cpr_nm
		  FROM order_sheet o
		     , order_sheet_detail d
			 , cm_product_mng p
		 WHERE d.cpr_cd = p.cpr_cd(+)
           AND o.orsh_no = d.orsh_no
	       AND d.orsh_pr = '접수완료'
	       AND d.cpr_cd IN ('stick001','stick002','stick003','stick004','stick005')
	       AND o.orsh_no IN 
				<foreach collection='orshNo' index='index' item='orshNo' open='(' close=')' separator=','>
				#{orshNo}
				</foreach>
	     GROUP BY p.cpr_nm
	            , d.cpr_cd
		 ORDER BY d.cpr_cd
	 
	</select>
	
	<!-- BOM 자재 정보 -->
	<select id="selectBom" parameterType="OrderPlanVO" resultType="BomInfoVO">
		SELECT mng.bom_cd
		     , cpr_cd
		     , mnf.cbm_cd
		     , cpc.cm_cd
		     , cm_nm
		     , cm_sq
		     , mtr.cmm_cd
		     , cmm_nm
		     , cbmt_cnsm
		     , cbmt_ms
		  FROM cm_bom_mng mng
		     , cm_bom_mnfct mnf
		     , cm_bom_mtrl mtr
		     , cm_mtrl_mng cmm
		     , cm_process_code cpc
		 WHERE mng.bom_cd = mnf.bom_cd
		   AND mtr.cmm_cd = cmm.cmm_cd(+)
		   AND mng.bom_cd = mtr.bom_cd
		   AND mnf.cbm_cd = mtr.cbm_cd(+)
		   AND mnf.cm_cd = cpc.cm_cd (+)
		   AND cpr_cd = #{cprCd}
		 ORDER BY cm_cd
	</select>
	
	<!-- 주문서 상세 현재상태 업데이트 -->
	<update id="updateOrderStatus" parameterType="String">
		UPDATE order_sheet_detail
		   SET orsh_pr = '계획완료',
			   stt_cng_dt = SYSDATE
		 WHERE orsh_no = #{orshNo}
	</update>
	
	<!-- 계획 등록 -->
	<insert id="insertPlan" parameterType="ProcPlanVO">
		<selectKey keyProperty="prplCd" resultType="String" order="BEFORE">
			SELECT 'plan'||TO_CHAR(SYSDATE,'yyMMdd')||TRIM(TO_CHAR(prpl_seq.nextval,'099')) as prpl_cd
			  FROM DUAL
		</selectKey>
		INSERT INTO proc_plan (prpl_cd,prpl_dt, prpl_mng)
		VALUES(
				  #{prplCd}
				, TO_DATE(SYSDATE, 'rrrr-MM-dd')
				, #{prplMng}
			   )
	</insert>

	<!-- 계획 상세 등록 -->
	<insert id="insertPlanDetail" parameterType="ProcPlanVO">
		<selectKey keyProperty="prplCd" resultType="String" order="BEFORE">
           SELECT prpl_cd
			  FROM (
					SELECT prpl_cd
					  FROM proc_plan
					 ORDER BY 1 DESC
				   ) p
			 WHERE ROWNUM BETWEEN 1 AND 1
		</selectKey>
		INSERT INTO proc_plan_detail (prpld_cd, prpl_cd, cpr_cd, prpld_cnt)
		VALUES (
				   'plandtl'||TO_CHAR(SYSDATE,'yyMMdd')||TRIM(TO_CHAR(prpl_dtl_seq.nextval,'099'))
				 , #{prplCd}
				 , #{cprCd}
				 , #{prpldCnt}
			   )
	</insert>
	<!-- 생산계획 리스트 -->
	<select id="seletPlanList" parameterType="ProcPlanVO" resultType="ProcPlanVO">
        SELECT pp.prpl_cd
             , COUNT(ppd.cpr_cd) cpr_cnt
             , prpld_status
             , prpl_mng
             , TO_CHAR(prpl_dt,'rrrr-MM-dd') as prpl_dt
          FROM proc_plan pp, proc_plan_detail ppd
         WHERE pp.prpl_cd = ppd.prpl_cd(+)
           AND prpld_status = '미지시'
         GROUP BY prpld_status
                , prpl_mng
                , TO_CHAR(prpl_dt,'rrrr-MM-dd')
                , pp.prpl_cd
         ORDER BY 1
	</select>

	<select id="searchPlanList" parameterType="ProcPlanVO" resultType="ProcPlanVO">
        SELECT prpld_cd 
		     , cpm.cpr_cd
		     , cpr_nm
		     , prpld_cnt
		     , prpld_status
		     , prpl_mng
		     , TO_CHAR(prpl_dt,'rrrr-MM-dd') as prpl_dt
		     , pp.prpl_cd
		  FROM proc_plan pp, proc_plan_detail ppd, cm_product_mng cpm
		 WHERE pp.prpl_cd = ppd.prpl_cd(+)
		   AND ppd.cpr_cd = cpm.cpr_cd(+)
		   AND prpld_status = '미지시'
           AND pp.prpl_cd = #{prplCd}
		 ORDER BY 1
	</select>
		 
		<select id="selectMtrlInput" resultType="BomInfoVO">
		select cmm.cmm_cd
		     , cmm_nm
		     , cml.min_cd
		     , cml_nm
		     , cml_in_cnt
		     , cml_in_dt
		  from cm_mtrl_lot cml
		     , mtrl_input mi
		     , cm_mtrl_mng cmm
		     , cm_bom_mtrl cbm
		     , cm_bom_mng bmg
		 WHERE cml.min_cd = mi.min_cd
		   AND cml.cmm_cd = cmm.cmm_cd
		   AND cmm.cmm_cd = cbm.cmm_cd
		   AND cbm.bom_cd = bmg.bom_cd
		   AND bmg.cpr_cd = #{cprCd}
	</select>

	<insert id="insertProcOrder" parameterType="ProcPlanVO">
		<selectKey keyProperty="prcmCd" resultType="String" order="BEFORE">
			SELECT 'prder'||TO_CHAR(SYSDATE,'yyMMdd')||TRIM(TO_CHAR(proc_com_seq.nextval,'099')) as prcm_cd
			  FROM DUAL
		</selectKey>
		INSERT INTO proc_command
		       (
		         prcm_cd
		       , prcm_cnt
		       , cpr_cd
		       , prcm_dt
		       , prcm_start_dt
		       , prcm_mng
		       )
		VALUES ( 
		         #{prcmCd} 
		       , #{prcmCnt}
		       , #{cprCd}
		       , TO_DATE(SYSDATE, 'rrrr-MM-dd')
		       , #{prcmStartDt}
		       , #{prcmMng}
		       )

	</insert>
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 <!-- 실적페이지 생산지시 데이터 조회용 -->
	<select id="getProcCommand" resultType="ProcResultAllVO">
		SELECT PRCM_CD,
		    PRCM_CNT,
		    C.CPR_CD,
		    CPR_NM,
		    PRCM_DT,
		    PRCM_START_DT,
		    PRCM_END_DT,
		    PRCM_MNG
		FROM PROC_COMMAND C
		LEFT JOIN CM_PRODUCT_MNG M
		ON C.CPR_CD = M.CPR_CD
	</select>
	<!-- 	실적페이지 공정 조회용 -->
	<select id="getProcProg" resultType="ProcResultAllVO" >
		SELECT PRCM_PRCD,
            P.PRCM_CD,
            P.CM_CD,
            M.CPR_NM,
            CM_NM,
            PRCM_TURN,
            PRCM_QNT,
            PRPR_QNT,
            PRPR_BAD,
            (PRPR_QNT+PRPR_BAD)PR_QNT_SUM,
            PRPR_END   
        FROM PROC_PROGRESS P
        LEFT JOIN CM_PROCESS_CODE C
        ON P.CM_CD = C.CM_CD
        LEFT JOIN PROC_COMMAND PC
        ON P.PRCM_CD = PC.PRCM_CD
        LEFT JOIN CM_PRODUCT_MNG M
        ON PC.CPR_CD=M.CPR_CD
        WHERE P.PRCM_CD = #{prcmCd}
	</select>
	
	<select id="getProcFac" resultType="ProcResultAllVO" >
		SELECT PRCM_PRCD,P.CM_CD,C.FAC_CD,FAC_NM,FAC_RUN
		FROM PROC_PROGRESS P
		LEFT JOIN CM_PROCESS_CODE C
		    ON C.CM_CD = P.CM_CD
		LEFT JOIN FAC F
		    ON UPPER(F.FAC_CD)=UPPER(C.FAC_CD)
		LEFT JOIN FAC_STAT S
		    ON F.FAC_CD = S.FAC_CD
		WHERE FAC_RUN = 'Y'
		    AND PRCM_PRCD=#{prcmPrcd};
	</select>
	































































	





























</mapper>