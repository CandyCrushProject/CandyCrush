<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.mes.process.mapper.ProcMapper">


	<!-- 주문 상세 코드 찾아오기 '접수완료' -->
	<select id="getOrdrDtlCd" resultType="OrderPlanVO">
		SELECT ordr_dtl_cd
		FROM order_sheet_detail
		WHERE orsh_pr = '접수완료'
		AND orsh_no IN
		<foreach collection='orshNo' index='index' item='orshNo'
			open='(' close=')' separator=','>
			#{orshNo}
		</foreach>
	</select>

	<!-- 제품 코드리스트 -->
	<select id="selectCprCdList" resultType="OrderPlanVO">
		SELECT cpr_cd
		FROM cm_product_mng
		ORDER BY cpr_cd
	</select>
	<!-- 주문서 목록 -->
	<select id="selectOrder" resultType="OrderPlanVO">
		SELECT s.orsh_no as orsh_no
		     , COUNT(ordr_dtl_cd) as ordr_cd_cnt
		     , s.ca_no as ca_no
		     , ca_nm
		     , TO_CHAR(dlvry_dt,'rrrr-MM-dd') as dlvry_dt
		     , TO_CHAR(orsh_dt,'rrrr-MM-dd') as orsh_dt
		  FROM order_sheet s
		     , order_sheet_detail d
		     , cm_account a
		 WHERE s.orsh_no = d.orsh_no(+)
		   AND s.ca_no = a.ca_no(+)
		   AND orsh_pr = '접수완료'
		 GROUP BY s.orsh_no, s.ca_no,ca_nm, orsh_dt, dlvry_dt
		 ORDER BY dlvry_dt
	</select>

	<!-- 주문서 디테일 정보 -->
	<select id="selectOrderDetail" parameterType="OrderPlanVO"
		resultType="OrderPlanVO">
		SELECT o.orsh_no as orsh_no
 			 , o.ca_no as ca_no
 			 , ca_nm
 			 , ordr_dtl_cnt
 			 , ordr_dtl_cd
			 , TO_CHAR(dlvry_dt,'rrrr-MM-dd') as dlvry_dt
			 , TO_CHAR(orsh_dt,'rrrr-MM-dd') as orsh_dt
			 , orsh_pr
			 , d.cpr_cd as cpr_cd
			 , p.cpr_nm as cpr_nm
			 , TO_CHAR(d.stt_cng_dt,'rrrr-MM-dd') as stt_cng_dt
		 FROM order_sheet o
		 	 , order_sheet_detail d
			 , cm_product_mng p
			 , cm_account a
		 WHERE o.orsh_no = d.orsh_no(+)
		   AND d.cpr_cd = p.cpr_cd(+)
		   AND o.ca_no = a.ca_no(+)
		   AND d.orsh_pr = '접수완료'
		   AND d.orsh_no = #{orshNo}
		   AND ca_nm = #{caNm}
		 ORDER BY 6
	</select>
	<!-- 계획 등록 전 정보 -->
	<select id="addPlanbefore" resultType="OrderPlanVO">
		SELECT SUM(ordr_dtl_cnt) as sum_dtl_cnt
			 , d.cpr_cd as cpr_cd
			 , p.cpr_nm as cpr_nm
		  FROM order_sheet o
			 , order_sheet_detail d
			 , cm_product_mng p
		 WHERE d.cpr_cd = p.cpr_cd(+)
		   AND o.orsh_no = d.orsh_no
		   AND d.orsh_pr = '접수완료'
		   AND d.cpr_cd IN ('stick001','stick002','stick003','stick004','stick005')
		   AND o.orsh_no IN
			   <foreach collection='orshNo' index='index' item='orshNo' open='(' close=')' separator=','>
			   #{orshNo}
			   </foreach>
		 GROUP BY p.cpr_nm
		     , d.cpr_cd
		 ORDER BY d.cpr_cd
	</select>

	<!-- BOM 자재 정보 -->
	<select id="selectBom" parameterType="OrderPlanVO" resultType="BomInfoVO">
		SELECT mng.bom_cd
		     , cpr_cd
		     , mnf.cbm_cd
		     , cpc.cm_cd
		     , cm_nm
		     , cm_sq
		     , mtr.cmm_cd
		     , cmm_nm
		     , cbmt_cnsm
		     , cbmt_ms
		  FROM cm_bom_mng mng
		     , cm_bom_mnfct mnf
			 , cm_bom_mtrl mtr
			 , cm_mtrl_mng cmm
			 , cm_process_code cpc
		 WHERE mng.bom_cd = mnf.bom_cd
		   AND mtr.cmm_cd = cmm.cmm_cd(+)
		   AND mng.bom_cd = mtr.bom_cd
		   AND mnf.cbm_cd = mtr.cbm_cd(+)
		   AND mnf.cm_cd = cpc.cm_cd (+)
		   AND cpr_cd = #{cprCd}
		 ORDER BY cm_cd, cmm_cd
	</select>

	<!-- 주문서 상세 현재상태 업데이트 -->
	<update id="updateOrderStatus" parameterType="String">
		UPDATE order_sheet_detail
		   SET orsh_pr = '계획완료'
		     , stt_cng_dt = SYSDATE
		 WHERE orsh_no = #{orshNo}
	</update>

	<!-- 계획 등록 -->
	<insert id="insertPlan" parameterType="ProcPlanVO">
		<selectKey keyProperty="prplCd" resultType="String" order="BEFORE">
			SELECT 'plan'||TO_CHAR(SYSDATE,'yyMMdd')||TRIM(TO_CHAR(prpl_seq.nextval,'099')) as prpl_cd
			  FROM DUAL
		</selectKey>
		INSERT INTO proc_plan (prpl_cd,prpl_dt, prpl_mng)
		VALUES(
				#{prplCd}
			  , TO_DATE(SYSDATE, 'rrrr-MM-dd')
			  , #{prplMng}
		      )
	</insert>

	<!-- 계획 상세 등록 -->
	<insert id="insertPlanDetail" parameterType="ProcPlanVO">
		<selectKey keyProperty="prplCd" resultType="String" order="BEFORE">
			SELECT prpl_cd
			FROM (
					SELECT prpl_cd
					FROM proc_plan
					ORDER BY 1 DESC
					) p
			WHERE ROWNUM BETWEEN 1 AND 1
		</selectKey>
		INSERT INTO proc_plan_detail (prpld_cd, prpl_cd, cpr_cd,prcm_start_dt, prpld_cnt)
		VALUES (
				'plandtl'||TO_CHAR(SYSDATE,'yyMMdd')||TRIM(TO_CHAR(prpl_dtl_seq.nextval,'099'))
				, #{prplCd}
				, #{cprCd}
				, TO_DATE(#{prcmStartDt}, 'rrrr-MM-dd')
				, #{prpldCnt}
				)
	</insert>
	<!-- 생산계획 리스트 -->
	<select id="seletPlanList" parameterType="ProcPlanVO"
		resultType="ProcPlanVO">
		SELECT pp.prpl_cd
			, COUNT(ppd.cpr_cd) cpr_cnt
			, prpld_status
			, prpl_mng
			, TO_CHAR(prpl_dt,'rrrr-MM-dd') as prpl_dt
		FROM proc_plan pp, proc_plan_detail ppd
		WHERE pp.prpl_cd = ppd.prpl_cd(+)
		AND prpld_status = '미지시'
		GROUP BY prpld_status
			, prpl_mng
			, TO_CHAR(prpl_dt,'rrrr-MM-dd')
			, pp.prpl_cd
		ORDER BY 1
	</select>
	<!-- 생산계획 디테일 검색 -->
	<select id="searchPlanList" parameterType="ProcPlanVO"
		resultType="ProcPlanVO">
		SELECT prpld_cd
			, cpm.cpr_cd
			, cpr_nm
			, prpld_cnt
			, prpld_status
			, prpl_mng
			, TO_CHAR(prpl_dt,'rrrr-MM-dd') as prpl_dt
			, pp.prpl_cd
		FROM proc_plan pp, proc_plan_detail ppd, cm_product_mng cpm
		WHERE pp.prpl_cd = ppd.prpl_cd(+)
			AND ppd.cpr_cd = cpm.cpr_cd(+)
			AND prpld_status = '미지시'
			AND pp.prpl_cd = #{prplCd}
		ORDER BY 1
	</select>
	<!-- 자재 정보 -->
	<select id="selectMtrlInput" resultType="BomInfoVO">
		SELECT cmm_nm
			, cml.cmm_cd
			, cbmt_ms
		FROM cm_mtrl_lot cml
			, cm_mtrl_mng cmm
			, cm_bom_mtrl cbm
			, cm_bom_mng bmg
			, cm_bom_mnfct mnf
		WHERE cml.cmm_cd = cmm.cmm_cd
			AND cml.cmm_cd = cbm.cmm_cd
			AND cbm.bom_cd = bmg.bom_cd
			AND cbm.bom_cd = mnf.bom_cd
			AND cpr_cd = #{cprCd}
		GROUP BY cmm_nm, cml.cmm_cd, cbmt_ms
		ORDER BY cml.cmm_cd
	</select>
	<!-- 생산지시 등록 -->
	<insert id="insertProcOrder" parameterType="ProcOrderVO">
		<selectKey keyProperty="prcmCd" resultType="String" order="BEFORE">
			SELECT
			'prcm'||TO_CHAR(SYSDATE,'rrrrMMdd')||TRIM(TO_CHAR(proc_com_seq.nextval,'099'))
			as prcm_cd
			FROM DUAL
		</selectKey>
		BEGIN
		INSERT INTO proc_command
				(
				prcm_cd
				, prcm_cnt
				, cpr_cd
				, prcm_dt
				, prcm_start_dt
				, prcm_mng
				, prcm_deadline
				)
		VALUES (
				#{prcmCd}
				, #{prcmCnt}
				, #{cprCd}
				, TO_DATE(SYSDATE, 'rrrr-MM-dd')
				, #{prcmStartDt}
				, #{prcmMng}
				, #{prcmDeadline}
				);

			UPDATE proc_plan_detail
			SET prpld_status = '지시완료'
			WHERE prpld_cd = #{prpldCd};
		END;

	</insert>
	<!-- 공정지시 등록 -->
	<insert id="insertProgressOne" parameterType="ProcOrderVO">
		INSERT INTO proc_progress
				(
				  prcm_prcd
				, prcm_cd
				, cm_cd
				, prcm_turn
				, prcm_qnt
				, prpr_end
				)
		VALUES (
				'picd'||TO_CHAR(SYSDATE,'rrrrMMdd')||TRIM(TO_CHAR(proc_prog_seq.nextval,'099'))
				, (
					SELECT prcm_cd
					FROM (
							SELECT prcm_cd
							FROM proc_command
							ORDER BY 1 DESC
						) t
					WHERE ROWNUM BETWEEN 1 AND 1
					)
				, #{cmCd}
				, #{cmSq}
				, (
					SELECT prcm_cnt
						FROM (
								SELECT prcm_cnt
								FROM proc_command
								ORDER BY prcm_cd DESC
								) t
						WHERE ROWNUM BETWEEN 1 AND 1
					)
				, 'N'
				)
	</insert>
	
	<!-- 공정지시 등록 -->
	<insert id="insertProgressFull" parameterType="ProcOrderVO">
		INSERT INTO proc_progress
				(
				prcm_prcd
				, prcm_cd
				, cm_cd
				, prcm_turn
				, prcm_qnt
				, prpr_end
				)
		VALUES (
				'picd'||TO_CHAR(SYSDATE,'rrrrMMdd')||TRIM(TO_CHAR(proc_prog_seq.nextval,'099'))
				, (
					SELECT prcm_cd
					FROM (
							SELECT prcm_cd
							FROM proc_command
							ORDER BY 1 DESC
						) t
					WHERE ROWNUM BETWEEN 1 AND 1
					)
				, #{cmCd}
				, #{cmSq}
				, 0
				, 'N'
				)
	</insert>
	<!-- 공정자재지시 등록 -->
	<insert id="insertProgMtrl" parameterType="ProcOrderVO">
		<selectKey keyProperty="prmpWkNo" resultType="String"
			order="BEFORE">
			SELECT
			'pimt'||TO_CHAR(SYSDATE,'rrrrMMdd')||TRIM(TO_CHAR(proc_mtrl_seq.nextval,'099'))
			as prmp_wk_no
			FROM DUAL
		</selectKey>
		INSERT INTO proc_mtrl_progress
				(
				prmp_wk_no
				, prcm_prcd
				, prmp_put_qnt
				, cmm_cd
				)
		VALUES (
				#{prmpWkNo}
				, (
					SELECT prcm_prcd
					FROM (
							SELECT prcm_prcd
							FROM proc_progress
							ORDER BY 1 DESC
							) t
					WHERE ROWNUM BETWEEN 1 AND 1
				)
				, #{prmpPutQnt}
				, #{cmmCd}
				)
	</insert>
	<!-- 자재 총 재고 -->
	<select id="findMtrlCntSum" parameterType="OrderPlanVO"
		resultType="OrderPlanVO">
		SELECT sum(pls_cnt) pls_cnt_sum
		, cpm.cpr_cd
		, cpr_nm
		FROM cm_product_mng cpm
		, prod_lot_stock pls
		WHERE cpm.cpr_cd = pls.cpr_cd
		AND cpm.cpr_cd = #{cprCd}
		GROUP BY cpm.cpr_cd, cpr_nm
	</select>
	<!-- 자재 로트별 재고 -->
	<select id="findMtrlLot" parameterType="OrderPlanVO"
		resultType="OrderPlanVO">
		SELECT pls_no
		, pls_cnt
		, cpm.cpr_cd
		, cpr_nm
		FROM cm_product_mng cpm
		, prod_lot_stock pls
		WHERE cpm.cpr_cd = pls.cpr_cd
		AND cpm.cpr_cd = #{cprCd}
		ORDER BY pls_mk_dt, pls_no
	</select>

	<!-- 담당자 목록 -->
	<select id="getManagerList" resultType="ProcPlanVO">
		SELECT mem_nm
		FROM CM_MEMBER

	</select>













































	<!-- 실적페이지 생산지시 데이터 조회용 -->
	<select id="getProcCommand" resultType="ProcResultAllVO">
		SELECT PRCM_CD,

		    PRCM_CNT,
		    C.CPR_CD,
		    CPR_NM,
		    PRCM_DT,
		    PRCM_START_DT,
		    PRCM_END_DT,
		    PRCM_MNG,
		    PRCM_DEADLINE
		FROM PROC_COMMAND C
		LEFT JOIN CM_PRODUCT_MNG M
		ON C.CPR_CD = M.CPR_CD
		WHERE PRCM_END_DT IS NULL
	</select>

	<!-- 	실적페이지 공정 조회용 -->
	<select id="getProc" resultType="ProcResultAllVO" >
		SELECT PRCM_PRCD,
            P.PRCM_CD,
            P.CM_CD,
            M.CPR_NM,
            CM_NM,
            PRCM_TURN,
            PRCM_QNT,
            PRPR_QNT,
            PRPR_BAD,
            (PRPR_QNT+PRPR_BAD)PR_QNT_SUM,
            PRPR_END   
        FROM PROC_PROGRESS P
        LEFT JOIN CM_PROCESS_CODE C
        ON P.CM_CD = C.CM_CD
        LEFT JOIN PROC_COMMAND PC
        ON P.PRCM_CD = PC.PRCM_CD
        LEFT JOIN CM_PRODUCT_MNG M
        ON PC.CPR_CD=M.CPR_CD
        WHERE P.PRCM_CD = #{prcmCd}
        ORDER BY PRCM_TURN DESC
	</select>

	<!-- 실적페이지 가용 설비 조회용 -->
	<select id="getProcFac" resultType="ProcResultAllVO">
		SELECT
		PRCM_PRCD,P.CM_CD,C.FAC_CD,FAC_NM,FAC_RUN
		FROM PROC_PROGRESS P
		LEFT JOIN
		CM_PROCESS_CODE C
		ON C.CM_CD = P.CM_CD
		LEFT JOIN FAC F
		ON UPPER(F.FAC_CD)=UPPER(C.FAC_CD)
		LEFT JOIN FAC_STAT S
		ON F.FAC_CD = S.FAC_CD
		WHERE FAC_RUN = 'Y'
		AND PRCM_PRCD=#{prcmPrcd}
	</select>

	<!-- 실적페이지 현재 작업현황 조회용 -->
	<select id="getProcProg" resultType="ProcResultAllVO">
		SELECT PRPE_CD,P.PRCM_PRCD,P.CM_CD,CM_NM,PRPE_MNG,PC.CPR_CD,CPR_NM,C.FAC_CD,FAC_NM,PRPE_WK_START_DT,PRCM_QNT
		FROM proc_perf P
		LEFT JOIN CM_PROCESS_CODE C
		ON P.CM_CD=C.CM_CD
		LEFT JOIN
		PROC_PROGRESS PP
		ON P.PRCM_PRCD = PP.PRCM_PRCD
		LEFT JOIN PROC_COMMAND PC
		ON PP.PRCM_CD = PC.PRCM_CD
		LEFT JOIN CM_PRODUCT_MNG CPM
		ON PC.CPR_CD =
		CPM.CPR_CD
		LEFT JOIN FAC F
		ON F.FAC_CD=C.FAC_CD
		WHERE PRPE_WK_END_DT IS
		NULL

	</select>
	<!-- 작업시작 인서트 -->
	<insert id="startProg" parameterType="ProcResultAllVO">
		<selectKey resultType="string" keyProperty="prpeCd"
			order="BEFORE">
			SELECT 'PRPE'||MAX(TO_NUMBER((NVL(SUBSTR(PRPE_CD,5),'1'))+1))
			FROM PROC_PERF
		</selectKey>
		INSERT INTO PROC_PERF
		(PRPE_CD,
		PRCM_PRCD,
		PRPE_MNG,
		CM_CD,
		PRPE_WK_START_DT,
		FAC_CD
		)
		VALUES(
		#{prpeCd},
		#{prcmPrcd},
		#{prpeMng},
		#{cmCd},
		#{prpeWkStartDt},
		#{facCd}
		)
	</insert>

	<!-- 공장불량코드 호출용 -->
	<select id="getBadCd" resultType="ProcResultAllVO">
		select PRBD_CD,PRBD_NM,PRBD_CTT
		from proc_bad_cd
	</select>



	<!-- 작업종료 업데이트 가즈아 -->

	<update id="insertResult" parameterType="ProcResultAllVO">
		UPDATE PROC_PERF
		SET PRPE_WK_END_DT = #{prpeWkEndDt},
		PRPE_AMNT_WK = #{prpeAmntWk},
		PRPE_PROD = #{prpeProd},
		PRPE_BAD_QNT = #{prpeBadQnt}
		WHERE PRPE_CD=#{prpeCd}
	</update>

	<!-- 불량입력 -->
	<insert id="insertBad" parameterType="ProcResultAllVO">
		<selectKey resultType="string" keyProperty="prpeBadCd"
			order="BEFORE">
			SELECT
			'PEBD'||MAX(TO_NUMBER((NVL(SUBSTR(PRPE_BAD_CD,5),'1'))+1)) FROM
			PROC_BAD
		</selectKey>
		INSERT INTO PROC_BAD
		(PRPE_BAD_CD,
		PRPE_CD,
		PRBD_CD,
		CMM_CD,
		BAD_QNT)
		VALUES(
		#{prpeBadCd},
		#{prpeCd},
		#{prbdCd},
		#{cmmCd},
		#{badQnt}
		)
	</insert>

	<!-- 공정지시코드를 받아서 사용자재 보내기 -->
	<select id="selectProcMtrl" resultType="ProcResultAllVO">
		select PRCM_PRCD,
		PRMP_PUT_QNT,
		P.CMM_CD,
		CMM_NM,
		CMM_TYP,
		CMM_SPEC,
		CMM_UNIT
		from PROC_MTRL_PROGRESS P
		LEFT JOIN CM_MTRL_MNG M
		ON P.CMM_CD=M.CMM_CD
		WHERE PRCM_PRCD=#{prcmPrcd}
	</select>

	<update id="updateProcProg" parameterType="ProcResultAllVO">
	UPDATE PROC_PROGRESS 
	SET 
	    PRPR_QNT=(NVL(PRPR_QNT,0)+TO_NUMBER(#{prpeProd})),
	    PRPR_BAD=(NVL(PRPR_BAD,0)+TO_NUMBER(#{prpeBadQnt})),
	    PRPR_END = 'Y'
	where PRCM_PRCD=#{prcmPrcd}
	</update>
	
	<select id="PselectNextProc" resultType="ProcResultAllVO">
	SELECT 
		PRCM_PRCD,
		PRCM_CD,
		CM_CD,
		PRCM_TURN,
		PRCM_QNT,
		PRPR_QNT,
		PRPR_BAD,
		PRPR_END
	from proc_progress
	where PRCM_CD = 
		(select prcm_cd from proc_progress
		where PRCM_PRCD=#{prcmPrcd}) 
	AND PRCM_TURN=
		((select prcm_turn from proc_progress
		where PRCM_PRCD=#{prcmPrcd})+1)
	</select>

	<update id="PupdateProcQnt" parameterType="ProcResultAllVO">
	update PROC_PROGRESS
	set PRCM_QNT = #{prcmQnt}
	where PRCM_PRCD = #{prcmPrcd}
	</update>
	
	<update id="PupdateProcFin" parameterType="ProcResultAllVO">
	update PROC_COMMAND
	set PRCM_END_DT = SYSDATE
	where PRCM_CD = #{prcmCd}
	</update>

















































































</mapper>