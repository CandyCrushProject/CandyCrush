<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.mes.material.mapper.MaterialMapper">
	<!-- 업체명조회 -->
	<select id="accountCheck" resultType="MtrlAccountVO">
		SELECT ca_no, ca_nm, ca_mng, ca_mng_ph, ca_bsns_num
		FROM CM_ACCOUNT
		WHERE CA_TYP = '매입처'
		ORDER BY ca_no
	</select>
		
	<!-- 모달창 업체검색 -->
	<select id="accountCheckModal" resultType="MtrlAccountVO">
		SELECT ca_no, ca_nm, ca_mng, ca_mng_ph, ca_bsns_num
		FROM CM_ACCOUNT
		WHERE CA_TYP = '매입처'
			<if test="caNo != null and !caNo.equals('')">
			AND ca_no LIKE '%' || #{caNo} || '%'
			</if>
			<if test="caNm != null and !caNm.equals('')">
			AND ca_nm LIKE '%' || #{caNm} || '%'
			</if>
		ORDER BY ca_no
	</select>
	
	<!-- 업체명 또는 자재명을 통한 자재검색 -->
	<select id="mtrlSearch" resultType="MaterialVO">
		SELECT cmm.cmm_cd, cmm_nm, cmm_typ, cmm_spec,
		        cmm_unit, cmm_saf_stc, NVL(mot_cnt, 0) mot_cnt, NVL(cml_in_cnt, 0) cml_in_cnt, ca_nm, cmm.ca_no,
		        NVL(TO_NUMBER(cml_in_cnt) - TO_NUMBER(mot_cnt), 0) AS "cmm_inven"
		FROM cm_account ca JOIN cm_mtrl_mng cmm
		ON ca.ca_no = cmm.ca_no
		 JOIN cm_mtrl_lot clot
		  ON cmm.cmm_cd = clot.cmm_cd
		    JOIN mtrl_otpt mot
		        ON clot.cml_nm = mot.cml_nm
		WHERE 1 = 1
			<if test="caNm != null and !caNm.equals('')">
			AND ca_nm LIKE '%' || #{caNm} || '%'
			</if>
			<if test="cmmNm != null and !cmmNm.equals('')">
			AND cmm_nm LIKE '%' || #{cmmNm} || '%' 
			</if>
		ORDER BY cmm_cd
	</select>
	
	<!-- 업체명 & 발주신청일 시작일자 ~ 종료일자  -->
	<select id="mtrlOrderDateSearch" resultType="MaterialOrderVO">
		SELECT DISTINCT mod.ca_no, ca_nm, mo.mo_cd, mo_reo_dt, mo_stt,
				mo_title
		FROM mtrl_order mo JOIN mtrl_order_detail mod
		    ON mo.mo_cd = mod.mo_cd
		        JOIN cm_account ca
		            ON mod.ca_no = ca.ca_no
		WHERE 1=1
		<if test="start != null and !start.equals('') and end!= null and !end.equals('')">
		AND mo_reo_dt BETWEEN #{start} AND #{end}
		</if>
		<if test="caNm != null and !caNm.equals('')">
		AND ca_nm LIKE '%' || #{caNm} || '%'
		</if>
		ORDER BY 1 DESC
	</select>
	
	<!-- 자재발주 단건조회 -->
	<select id="mtrlOrderOneCheck" resultType="MaterialOrderVO">
		SELECT mo.mo_cd, mo_title, mo_reo_dt, mod.cmm_cd, mo_req_dt, mod.ca_no, ca_nm
				,TO_NUMBER(cml_in_cnt) - TO_NUMBER(mot_cnt) AS "cmm_inven"
		FROM mtrl_order mo 
		 JOIN mtrl_order_detail mod
		  ON mo.mo_cd = mod.mo_cd
		   JOIN cm_account ca
		    ON mod.ca_no = ca.ca_no
		     JOIN cm_mtrl_mng cmm
		      ON mod.cmm_cd = cmm.cmm_cd
			   JOIN cm_mtrl_lot cml
			    ON mod.cmm_cd = cml.cmm_cd
			     JOIN mtrl_otpt mot
			      ON cml.cml_nm = mot.cml_nm
		WHERE cmm.cmm_cd = #{cmmCd}
	</select>
	
	<!-- 자재발주 디테일 단건조회 -->
	<!-- 발주코드, 업체코드, 업체명, 자재코드, 자재명, 발주수량, 안전재고, 납기요청일, 현재재고, 예상재고량 -->
	<select id="mtrlOrderDetailList" resultType="MaterialOrderVO">
		SELECT mo.mo_cd, mod.ca_no, ca_nm, mod.cmm_cd, cmm_nm, mo_cnt, cmm_saf_stc, mo_req_dt, mod_cd,
		        TO_NUMBER(cml_in_cnt) - TO_NUMBER(mot_cnt) AS "cmm_inven",
		        TO_NUMBER(cml_in_cnt) - TO_NUMBER(mot_cnt) + TO_NUMBER(mo_cnt) "cmm_est_inven"
		FROM mtrl_order mo
			JOIN mtrl_order_detail mod
			  ON mo.mo_cd = mod.mo_cd
			   JOIN cm_account ca
			    ON mod.ca_no = ca.ca_no
			     JOIN cm_mtrl_mng cmm
			      ON mod.cmm_cd = cmm.cmm_cd
				   JOIN cm_mtrl_lot cml
				    ON mod.cmm_cd = cml.cmm_cd
				     JOIN mtrl_otpt mot
				      ON cml.cml_nm = mot.cml_nm
		where mo.mo_cd = #{moCd}
		order by 4 asc
	</select>
	
	<!-- 자재발주코드 자동생성 -->
	<!-- <select id="getMtrlOrderCode" resultType="MaterialOrderVO">
		SELECT 'mo' || to_char(sysdate, 'yymmdd') || to_char(NVL(MAX(SUBSTR(mo_cd, 3, 4)), 0) + 1) "mo_cd"
		FROM mtrl_order
	</select> -->
	
	<!-- 발주관리 헤더 INSERT -->
	<insert id="orderHeaderInsert" parameterType="MaterialOrderVO">
		<selectKey resultType="String" keyProperty="moCd" order="BEFORE">
			SELECT 'mo' || TO_CHAR(sysdate, 'yyMMdd') ||MO_SEQ.NEXTVAL AS mo_cd
			FROM dual
		</selectKey>
		INSERT INTO MTRL_ORDER(mo_cd, mo_title, mo_reo_dt, mo_stt)
		VALUES(#{moCd} , #{moTitle}, TO_CHAR(#{moReoDt}, 'yyyy-MM-dd'), '발주완료')
	</insert>
	
	<!-- 발주관리디테일 INSERT -->
	<insert id="orderDetailInsert" parameterType="MaterialOrderVO">
		INSERT INTO mtrl_order_detail(mod_cd, mo_cd, mo_cnt, mo_req_dt, ca_no, cmm_cd)
		VALUES
			('mod' || mod_seq.NEXTVAL || TO_CHAR(sysdate, 'yyMMdd'), #{moCd}, #{moCnt}, TO_CHAR(#{moReqDt}, 'yyyy-MM-dd'), #{caNo}, #{cmmCd})
	</insert>
	
	<!-- 발주코드를 기반으로 헤더와 디테일의 데이터를 지운다 -->
	<delete id="orderDelete" parameterType="String">
		DELETE FROM mtrl_order
		WHERE mo_cd = LOWER(#{delMocd})
	</delete>
	
	<!-- 발주상세코드를 기반으로 디테일 데이터만 지우거나 디테일 데이터와 발주 헤더 데이터를 지운다 -->
	<delete id="orderDetailDelete" statementType="CALLABLE" parameterType="MaterialOrderVO">
	    { call del_mtrl_order(
	        #{moCd, mode=IN, jdbcType=VARCHAR, javaType=String},
	        #{modCd, mode=IN, jdbcType=VARCHAR, javaType=String}
	       )
	     }
	</delete>
	
	<!-- 발주조회디테일 UPDATE-->
	<update id="orderDetailUpdate" parameterType="MaterialOrderVO">
		UPDATE MTRL_ORDER_DETAIL
		   SET mo_cnt = #{moCnt},
		       mo_req_dt = #{moReqDt}
		WHERE  mo_cd = #{moCd}
		  AND  cmm_cd = #{cmmCd}
	</update>
	
		
	<!-- 발주입고관리 페이지 / 검사일자 : 시작일자 ~ 종료일자 & 업체명을 통한 데이터 조회 -->
	<!-- 검사코드, 검사일자, 합격수량, 발주코드, 발주상세코드, 자재코드, 자재명, 자재규격, 자재단위, 자재유형 -->
	<select id="mtrlInputGetList" resultType="MaterialInputVO">
		SELECT  mi.mi_cd, mi_dt, mi_pass_cnt, mo.mo_cd, mod.mod_cd,
		        mod.cmm_cd, cmm_nm, cmm_spec, cmm_unit, cmm_typ
		FROM mtrl_insp mi
		       JOIN mtrl_order_detail mod
		         ON mi.mod_cd = mod.mod_cd
		           JOIN mtrl_order mo
		             ON mod.mo_cd = mo.mo_cd
		               JOIN cm_mtrl_mng cmm
		                 ON mod.cmm_cd = cmm.cmm_cd
		                   JOIN cm_account ca
		                     ON mod.ca_no = ca.ca_no
		                        LEFT OUTER JOIN mtrl_input min
		                            ON mi.mi_cd = min.mi_cd
		WHERE 1=1
		<if test="caNm != null and !caNm.equals('')">
		AND ca_nm LIKE '%' || #{caNm} || '%'
		</if>
		<if test="start != null and !start.equals('') and end!= null and !end.equals('')">
		AND mi_dt BETWEEN #{start} AND #{end}
		</if>
		AND min.min_cd IS NULL
		ORDER BY mi_cd
	</select>
	
	<!-- 자재입고관리 / 입고목록 -> 7일 이내 -->
	<select id="mtrlInputList7Days" resultType="MaterialInputVO">
		SELECT COUNT(min_cd) AS "MIN_CD_COUNT", min_cd, min_dt
		FROM mtrl_input
		WHERE min_dt >= TO_CHAR(SYSDATE-7,'yyyy-MM-dd')
		GROUP BY min_cd, min_dt
		ORDER BY min_cd DESC
	</select>
	
	<!-- 자재입고관리 / 입고상세 -->
	<!-- 입고가 완료된 검수코드, LOT코드, 자재코드 가져오기
		 입고)검수코드, 검수)발주상세코드, 발주상세)자재코드, 입고)입고코드, 입고)입고수량, LOT)LOT코드 -->
	<select id="mtrlInputDetailList" resultType="MaterialInputVO">
		SELECT min.mi_cd, mi.mod_cd, mod.cmm_cd, min.min_cd, min_cnt, cmm_typ,
        		cmm_spec, cmm_unit, cmm_nm, mod.mo_cd
		FROM mtrl_input min
		    JOIN MTRL_INSP mi
		        ON min.mi_cd = mi.mi_cd
		            JOIN mtrl_order_detail mod
		                ON mi.mod_cd = mod.mod_cd
		                    JOIN cm_mtrl_mng cmm
		                        ON mod.cmm_cd = cmm.cmm_cd
		                            JOIN mtrl_order mo
		                                ON mod.mo_cd = mo.mo_cd
		WHERE min.min_cd = #{minCd}
		ORDER BY min.mi_cd
	</select>
	
	<!-- 자재입고 등록 -->
	<insert id="mtrlInputInsert" parameterType="MaterialInputVO">
		<selectKey resultType="string" keyProperty="minCd" order="BEFORE">
		SELECT 'min' || TO_CHAR(sysdate, 'yyMMdd') || min_seq.NEXTVAL
		FROM dual
		</selectKey>
		<foreach collection="list" item="vo" open="INSERT ALL" close="SELECT * FROM DUAL">
			INTO 
				mtrl_input(min_cd, mi_cd, min_cnt, min_dt)
			VALUES
				(
					#{minCd},
					#{vo.miCd},
					#{vo.minCnt},
					#{vo.minDt}
				)
		</foreach>
	</insert>
	
	<!-- 자재입고시 LOT로 넣어버려 -->
	<insert id="mtrlLotInsert" parameterType="MaterialInputVO">
	<selectKey resultType="string" keyProperty="minCd" order="BEFORE">
		SELECT MAX(min_cd)
		FROM mtrl_input
	</selectKey>
		INSERT INTO
			CM_MTRL_LOT (
				cml_nm, 
				min_cd,
				cml_in_cnt, 
				cml_in_dt, 
				cmm_cd, 
				mi_cd
			)
		SELECT 
			'cml' || TO_CHAR(sysdate, 'yyMMdd') || cml_seq.NEXTVAL,
			'min' || TO_CHAR(sysdate, 'yyMMdd') || min_seq.CURRVAL, 
			A.*
		FROM (
			<foreach collection="list" item="vo" separator="UNION ALL">
			SELECT
				#{vo.cmlInCnt} AS cml_in_cnt,
				#{vo.cmlInDt} AS cml_in_dt,
				#{vo.cmmCd} AS cmm_cd,
				#{vo.miCd} AS mi_cd
			FROM
				DUAL
			</foreach>
		) A
	</insert>
	
	<update id="mtrlMoSttUpdate" parameterType="MaterialInputVO" statementType="CALLABLE">
		{ call mtrl_update(
		        #{moCd, mode=IN, jdbcType=VARCHAR, javaType=String}
		       )
		}
	</update>

	<!-- 출고목록 -->
	<select id="mtrlOutList" resultType="MaterialVO">
		SELECT lot.cmm_cd, cmm_nm, cmm_spec, cmm_unit, cmm_typ, lot.min_cd,
		        lot.cml_nm, cml_in_cnt, NVL(mot_cnt, 0) mot_cnt
		FROM mtrl_otpt mot
		    RIGHT OUTER JOIN cm_mtrl_lot lot
		        ON mot.cml_nm = lot.cml_nm
		            JOIN cm_mtrl_mng cmm
		                ON lot.cmm_cd = cmm.cmm_cd
		WHERE cml_in_cnt > mot_cnt OR NVL(mot_cnt, 0) = 0
		ORDER BY lot.cml_nm
	</select>
	
	<!-- 7일이이내 출고등록 리스트 -->
	<select id="mtrlOut7DayList" resultType="MaterialVO">
		SELECT COUNT(*) mot_cd_cnt, mot_cd, mot_dt
		FROM mtrl_otpt
		WHERE mot_dt >= TO_CHAR(SYSDATE-7,'yyyy-MM-dd')
		GROUP BY mot_cd, mot_dt
		ORDER BY mot_cd DESC
	</select>
	
	<!-- 출고상세 -->
	<select id="mtrlOutDetailList" resultType="MaterialVO">
		SELECT mot_dt, lot.cmm_cd, cmm_nm, cmm_unit, cmm_spec, cmm_typ, mot_cnt, mot_note, mot_typ
		FROM mtrl_otpt mot
		    JOIN cm_mtrl_lot lot
		        ON mot.cml_nm = lot.cml_nm
		            JOIN cm_mtrl_mng cmm
		                ON lot.cmm_cd = cmm.cmm_cd
		WHERE mot_cd = #{motCd}
	</select>
	
	<!-- 출고관리 테이블 INSERT -->
	<insert id="mtrlOutInsert" parameterType="MaterialVO">
		INSERT INTO
			MTRL_OTPT
					(
					  MOT_CD, MOT_CNT, MOT_DT, MOT_TYP,
				      MOT_NOTE, CML_NM, MIN_CD
					 )
	 		SELECT
	 			'mot' || mot_seq.NEXTVAL || TO_CHAR(sysdate , 'yyMMdd'),
	 			A.*
	 		FROM(
	 			<foreach collection="list" item="vo" separator="UNION ALL">
	 			SELECT
					#{vo.motCd} AS mot_cd, #{vo.motCnt} AS mot_cnt,
					#{vo.motDt} AS mot_dt, #{vo.motTyp} AS mot_typ,
					#{vo.motNote} AS mot_note, #{vo.cmlNm} AS cml_nm, #{vo.minCd} AS min_cd
				FROM
					DUAL
				</foreach>
			  ) A
	</insert>
</mapper>