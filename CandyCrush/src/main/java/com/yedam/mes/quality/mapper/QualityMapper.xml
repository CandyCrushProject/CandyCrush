<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace = "com.yedam.mes.quality.mapper.QualityMapper">
    <select id="selectMtQualityTestList" resultType="QualityMtTestVO">
	select MI_CD,
        MOD_CD,
        MI_DT,
        MI_MNG,
        MI_CNT,
        MI_BAD_CNT,
        MI_PASS_CNT
	FROM MTRL_INSP
	WHERE MOD_CD=#{modCd}
  </select>
  
	<select id="selectMtOrderInspStat" resultType="MtOrderInspStatVO">
	select
	    D.MO_CD,
	    D.MOD_CD,
	    MO_TITLE,
	    MO_REO_DT,
	    MO_REQ_DT,
	    D.CMM_CD,
	    C.CMM_NM,
	    MO_CNT,
	    D.CA_NO,
	    A.CA_NM,
	    NVL(INSP_PROC,0) INSP_PROC
	FROM
	    MTRL_ORDER_DETAIL D
	    LEFT JOIN MTRL_ORDER M
	    	ON D.MO_CD=M.MO_CD
	    LEFT JOIN CM_MTRL_MNG C
	    	ON D.CMM_CD= C.CMM_CD
	    LEFT JOIN (select MOD_CD,SUM(MI_CNT) INSP_PROC
	                FROM MTRL_INSP
	                GROUP BY MOD_CD) I
	    	ON D.MOD_CD = I.MOD_CD
	    LEFT JOIN CM_ACCOUNT A
	    	ON D.CA_NO = A.CA_NO
	    ORDER BY MOD_CD
  </select>
  <select id="selectMtBadCode" resultType="MtBadCodeVO">
	 SELECT
	    CMB_CD,
	    CMB_NM,
	    CMB_CTT
	FROM cm_mtrl_bad_code
  </select>
  <select id="getNewMiCd" resultType="String">
  	SELECT 'MI' 
        ||mi_seq.NEXTVAL ||
        TO_CHAR(SYSDATE, 'yyMMdd')
	FROM DUAL
  </select>
  <insert id="InsertMtInsp" parameterType='MtInspInsertVO'>
  	INSERT INTO MTRL_INSP
	    (
	    MI_CD,
	    MOD_CD,
	    MI_DT,
	    MI_MNG,
	    MI_CNT,
	    MI_BAD_CNT,
	    MI_PASS_CNT
	    )
	VALUES(
	    #{miCd},
	    #{modCd},
	    #{miDt},
	    #{miMng},
	    #{miCnt},
	    #{miBadCnt},
	    #{miPassCnt}
    	)
  </insert>
  
  <insert id="InsertMtBadInsp" parameterType='MtInspBadInsertVO'>
  	INSERT INTO MTRL_BAD_HSTR
		(MBH_CD,
		MBH_CNT,
		MBH_NOTE,
		MI_CD,
		CMB_CD
		)
	VALUES(
		(SELECT NVL(MAX(TO_NUMBER(MBH_CD)),0)+1 MBH_CD FROM MTRL_BAD_HSTR),
		#{mbhCnt},
		#{mbhNote},
		#{miCd},
		#{cmbCd}
		)
  </insert>
  
  <!-- ///////////////////제품검수////////////////////- -->
  <!-- 생산지시 모달 검색 -->
  <select id="procProdList" resultType="prodInspVO">
	SELECT prcm_dt, pc.prcm_cd, pc.cpr_cd, cpr_nm, cpr_typ
	FROM proc_command pc
	    JOIN cm_product_mng cpr
	        ON pc.cpr_cd = cpr.cpr_cd
	        	LEFT OUTER JOIN prdct_inspc pi
	        		ON pc.prcm_cd = pi.prcm_cd
	WHERE prcm_end_dt IS NOT NULL
	AND pi_cd IS NULL
	ORDER BY prcm_cd DESC
  </select>
  
  <!-- 생산지시 리스트 -->
  <select id="procPrprEndIsNAllList" resultType="prodInspVO">
  	SELECT proc.prcm_cd, cpr_nm, prcm_start_dt, prcm_end_dt
	FROM proc_command proc
        JOIN cm_product_mng cpr
	        ON proc.cpr_cd = cpr.cpr_cd
	        	LEFT OUTER JOIN prdct_inspc pi
	        		ON proc.prcm_cd = pi.prcm_cd
	WHERE prcm_end_dt IS NOT NULL
	AND pi_cd IS NULL
	<if test="cprNm != null and !cprNm.equals('')">
	AND cpr_nm LIKE '%' || #{cprNm} || '%'
	</if>
	<if test="start != null and !start.equals('') and end!= null and !end.equals('')">
	AND prcm_end_dt BETWEEN #{start} AND #{end}
	</if>
	ORDER BY prcm_cd 
  </select>
  
  <!-- 생산지시 상세 -->
  <select id="procDetailList" resultType="prodInspVO">
  	SELECT prpr.prcm_cd, cpr_nm, prpr_end, prpr.cm_cd, pr.cpr_cd,
   		   prcm_qnt, prpr_qnt, prpr_bad
	FROM proc_command pr
	    JOIN proc_progress prpr
	        ON pr.prcm_cd = prpr.prcm_cd
	                JOIN CM_PROCESS_CODE cm
	                    ON prpr.cm_cd = cm.cm_cd
	                        JOIN cm_product_mng cpr
	                            ON pr.cpr_cd = cpr.cpr_cd
	                            	JOIN proc_perf prpe
                                    	ON prpr.prcm_prcd = prpe.prcm_prcd
	WHERE UPPER(pr.prcm_cd) = #{prcmCd} OR LOWER(prpr.prcm_cd) = #{prcmCd}
	AND prpr_end = 'Y'
	AND PRCM_TURN = '5'
  </select>
  
  <!-- 검사코드등록 -->
  <insert id="prodInspInsert" parameterType="prodInspVO">
  	<selectKey resultType="string" keyProperty="piCd" order="BEFORE">
  		SELECT 'PIC' || TO_CHAR(sysdate, 'yyMMdd') || prdct_inspc_seq.NEXTVAL
		FROM dual
  	</selectKey>
  	INSERT INTO
  		PRDCT_INSPC (
			  			PI_CD,
			  			PI_DT,
			  			PI_STR_DT,
			  			PI_END_DT,
			  			PI_MNG,
			  			PI_CNT,
			  			PI_BAD_CNT,
			  			PI_PASS_CNT,
			  			PI_NOTE,
			  			CPR_CD,
			  			PRCM_CD
			  		)
  		VALUES (
  					#{piCd},
  					#{piDt},
  					#{piStrDt},
  					#{piEndDt},
  					#{piMng},
  					#{piCnt},
  					#{piBadCnt},
  					#{piPassCnt},
  					#{piNote},
  					#{cprCd},
  					#{prcmCd}
  				)
  </insert>

























  </mapper>