<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-5.3.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">

	<security:http pattern="/css/**" security="none" />

	<security:http>
	<!-- 로그인된 상태에서는 로그인이나 회원가입 화면에 접근 못하도록 함 -->
		<security:intercept-url pattern="/login" access="isAnonymous()" />
			
		<!-- /admin/** 에 관해서는 ROLE_ADMIN 권한을 가진 회원(즉, 관리자만 접근 -->
		<security:intercept-url pattern="/WEB-INF/views/**"
			access="hasAuthority('ROLE_ADMIN')" />
		<!-- /admin/** 에 관해서는 ROLE_ADMIN 권한을 가진 회원(즉, 관리자만 접근 -->
		<security:intercept-url pattern="/WEB-INF/views/**"
			access="hasAuthority('ROLE_FAC')" />
				<!-- /admin/** 에 관해서는 ROLE_ADMIN 권한을 가진 회원(즉, 관리자만 접근 -->
		<security:intercept-url pattern="/WEB-INF/views/**"
			access="hasAuthority('ROLE_PROC')" />
				<!-- /admin/** 에 관해서는 ROLE_ADMIN 권한을 가진 회원(즉, 관리자만 접근 -->
		<security:intercept-url pattern="/WEB-INF/views/**"
			access="hasAuthority('ROLE_MTRL')" />
				<!-- /admin/** 에 관해서는 ROLE_ADMIN 권한을 가진 회원(즉, 관리자만 접근 -->
		<security:intercept-url pattern="/WEB-INF/views/**"
			access="hasAuthority('ROLE_SALES')" />
			


		<!-- 로그인 성공시,-->
		<security:form-login 
					login-page="/login" 
					default-target-url="/ProcManagement" />
	
		
		<!-- 로그아웃 버튼 누르면...  혹은 URL 을 /logout 으로 입력시,   로그아웃을 성공적으로 했을 때  /login 으로 이동함 -->
		<security:logout logout-url="/logout"
						 logout-success-url="/login"/>
		<security:csrf disabled="true" />
	</security:http>

	<!-- ↓ 프로젝트 때 이 방식 X.  userdetailservice 방식으로 쓸 거 같음(커스터마이징해서?) -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query
				="select MEM_ID, MEM_PASS, 1
              		from CM_MEMBER
              		where MEM_ID = ?"
				authorities-by-username-query
				="select MEM_ID, ROLE_NAME
              		from CM_MEMBER
              		where MEM_ID = ?" />
          	<!-- ↓↓↓ 로그인 암호화?? -->
            <security:password-encoder hash="bcrypt"/>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
